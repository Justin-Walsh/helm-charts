suite: "persistence"
templates:
  - templates/nfs-statefulset.yaml
kubernetesProvider:
  scheme:
    "apps/v1/StatefulSet":
      gvr:
        group: "apps"
        version: "v1"
        resource: "statefulsets"
      namespaced: true
  objects:
  - kind: StatefulSet
    apiVersion: "apps/v1"
    metadata:
      name: "empty-serviceName-nfs"
      namespace: "NAMESPACE"
  - kind: StatefulSet
    apiVersion: "apps/v1"
    metadata:
      name: "populated-serviceName-nfs"
      namespace: "NAMESPACE"
    spec:
      serviceName: "populated-serviceName-nfs"
tests:
- it: "is not created when storageClassName has a value"
  set:
    persistence:
      storageClassName: "value"
  asserts:
  - hasDocuments:
      count: 0

- it: "should match snapshot"
  asserts:
  - matchSnapshot: {}

- it: sets the emptyDir size to be the value in values
  set:
    persistence:
      size: 100Gi
  asserts:
  - equal:
      path: spec.template.spec.volumes[?(@.name == 'octopus-volume')].emptyDir.sizeLimit
      value: 100Gi

- it: does not set serviceName if the StatefulSet exists and has an empty serviceName
  set:
    nameOverride: "empty-serviceName"
  asserts:
  - equal:
      path: metadata.name
      value: "empty-serviceName-nfs"
  - notExists:
      path: spec.serviceName

- it: sets serviceName if the StatefulSet doesn't exist
  asserts:
  - equal:
      path: spec.serviceName
      value: octopus-agent-nfs

- it: sets serviceName if the StatefulSet exists and is set to same service name  
  set:
    nameOverride: "populated-ServiceName"
  asserts:
  - equal:
      path: spec.serviceName
      value: populated-ServiceName-nfs